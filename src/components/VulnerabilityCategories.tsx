import { motion } from "framer-motion";
import { Card, CardContent } from "./ui/card";
import { AlertCircle, AlertTriangle, CheckCircle } from "lucide-react";

const categories = [
  {
    icon: AlertCircle,
    title: "Critical Issues",
    level: "RED",
    color: "border-red-400/50",
    bgGradient: "bg-gradient-to-br from-red-300 via-pink-300 to-rose-300 dark:from-red-950/70 dark:via-pink-950/60 dark:to-rose-950/70",
    iconColor: "text-red-500",
    items: [
      "Hardcoded API keys & secrets",
      "SQL injection vulnerabilities",
      "Remote code execution risks",
      "Authentication bypasses",
      "Exposed database credentials"
    ]
  },
  {
    icon: AlertTriangle,
    title: "Security Warnings",
    level: "YELLOW",
    color: "border-amber-400/50",
    bgGradient: "bg-gradient-to-br from-amber-300 via-yellow-300 to-orange-300 dark:from-amber-950/70 dark:via-yellow-950/60 dark:to-orange-950/70",
    iconColor: "text-amber-500",
    items: [
      "Weak cryptography (MD5, SHA1)",
      "Missing input validation",
      "Insecure random generators",
      "Debug mode in production",
      "Outdated dependencies"
    ]
  },
  {
    icon: CheckCircle,
    title: "Best Practices",
    level: "GREEN",
    color: "border-emerald-400/50",
    bgGradient: "bg-gradient-to-br from-emerald-300 via-green-300 to-teal-300 dark:from-emerald-950/70 dark:via-green-950/60 dark:to-teal-950/70",
    iconColor: "text-emerald-500",
    items: [
      "Parameterized queries",
      "Bcrypt password hashing",
      "HTTPS enforcement",
      "CSRF protection",
      "Rate limiting"
    ]
  }
];

export function VulnerabilityCategories() {
  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.2
      }
    }
  };

  const itemVariants = {
    hidden: { opacity: 0, y: 20 },
    visible: {
      opacity: 1,
      y: 0,
      transition: {
        duration: 0.5
      }
    }
  };

  return (
    <section className="py-20 bg-slate-50 dark:bg-slate-900">
      <div className="max-w-7xl mx-auto px-6">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
          viewport={{ once: true }}
          className="text-center mb-16"
        >
          <h2 className="text-3xl lg:text-4xl mb-4">
            What We Detect
          </h2>
          <p className="text-lg text-slate-600 dark:text-slate-400 max-w-2xl mx-auto">
            LocalSentinel categorizes findings by severity to help you prioritize fixes
            and recognize secure coding practices.
          </p>
        </motion.div>

        <motion.div
          variants={containerVariants}
          initial="hidden"
          whileInView="visible"
          viewport={{ once: true }}
          className="grid lg:grid-cols-3 gap-8"
        >
          {categories.map((category, index) => (
            <motion.div
              key={index}
              variants={itemVariants}
              whileHover={{ scale: 1.02 }}
              transition={{ type: "spring", stiffness: 300 }}
            >
              <Card className={`h-full border-2 ${category.color} ${category.bgGradient}`}>
                <CardContent className="p-8">
                  <div className="flex items-center gap-3 mb-6">
                    <category.icon className={`w-8 h-8 ${category.iconColor}`} />
                    <div>
                      <h3 className="text-xl font-semibold">{category.title}</h3>
                      <span className={`text-sm font-bold ${category.iconColor}`}>
                        {category.level}
                      </span>
                    </div>
                  </div>

                  <ul className="space-y-3">
                    {category.items.map((item, itemIndex) => (
                      <motion.li
                        key={itemIndex}
                        initial={{ opacity: 0, x: -20 }}
                        whileInView={{ opacity: 1, x: 0 }}
                        transition={{ delay: index * 0.1 + itemIndex * 0.05 }}
                        viewport={{ once: true }}
                        className="flex items-start gap-2"
                      >
                        <span className={`mt-1 ${category.iconColor}`}>â†’</span>
                        <span className="text-slate-700 dark:text-slate-300">{item}</span>
                      </motion.li>
                    ))}
                  </ul>
                </CardContent>
              </Card>
            </motion.div>
          ))}
        </motion.div>

        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6, delay: 0.3 }}
          viewport={{ once: true }}
          className="mt-12 text-center"
        >
          <p className="text-slate-600 dark:text-slate-400">
            Each finding comes with detailed explanations and copy-paste fixes
          </p>
        </motion.div>
      </div>
    </section>
  );
}